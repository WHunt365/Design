package francee;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import java.awt.Color;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JTextField;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JScrollPane;

public class francee extends JFrame {

	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private JTextField txtBarcode;
	private JTextField txtItem;
	private JTextField txtPrice;
	private JTextField txtQuantity;
	private JTextField txtSubtotal;
	private final String[] itemBarcodes = {"01","02","03","04"};
	private final String[] itemNames = {"back pack","sling bag","shoulder bag"," hand bag"};
	private final double[] itemPrices = {405,250,300,105};
	private double price;
	private int quantity;
	private JTextField textField;
	private JTextField textField_1;
	private JTextField textField_2;
	private JTable table;
	private JTable table_1;
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					francee frame = new francee();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public francee() {
		setBackground(new Color(0, 0, 0));
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 901, 450);
		contentPane = new JPanel();
		contentPane.setBackground(new Color(220, 185, 225));
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel lblNewLabel = new JLabel("POINT OF SALES");
		lblNewLabel.setFont(new Font("Sitka Text", Font.BOLD, 14));
		lblNewLabel.setBounds(310, 10, 118, 28);
		contentPane.add(lblNewLabel);
		
		JLabel lblNewLabel_1 = new JLabel("Barcode");
		lblNewLabel_1.setFont(new Font("Sylfaen", Font.PLAIN, 15));
		lblNewLabel_1.setBounds(31, 57, 50, 28);
		contentPane.add(lblNewLabel_1);
		
		JLabel lblNewLabel_2 = new JLabel("Price");
		lblNewLabel_2.setFont(new Font("Sylfaen", Font.PLAIN, 15));
		lblNewLabel_2.setBounds(152, 62, 45, 19);
		contentPane.add(lblNewLabel_2);
		
		JLabel lblNewLabel_3 = new JLabel("Item ");
		lblNewLabel_3.setFont(new Font("Sylfaen", Font.PLAIN, 15));
		lblNewLabel_3.setBounds(31, 116, 45, 31);
		contentPane.add(lblNewLabel_3);
		
		JLabel lblNewLabel_4 = new JLabel("Quantity");
		lblNewLabel_4.setFont(new Font("Sylfaen", Font.PLAIN, 15));
		lblNewLabel_4.setBounds(152, 117, 58, 28);
		contentPane.add(lblNewLabel_4);
		
		JLabel lblNewLabel_5 = new JLabel("Subtotal");
		lblNewLabel_5.setFont(new Font("Sylfaen", Font.BOLD, 15));
		lblNewLabel_5.setBounds(51, 177, 69, 42);
		contentPane.add(lblNewLabel_5);
		
		txtBarcode = new JTextField();
		txtBarcode.addKeyListener(new KeyAdapter() {
			@Override
			public void keyPressed(KeyEvent e) {if (e.getKeyChar() == KeyEvent.VK_ENTER) {
                String enteredBarcode = txtBarcode.getText();
                int index = -1;
                for (int i = 0; i < itemBarcodes.length; i++) {
                    if (itemBarcodes[i].equals(enteredBarcode)) {
                        index = i;
                        break;
                    }
                }
                if (index != -1) {
                    txtItem.setText(itemNames[index]);
                    txtPrice.setText(String.valueOf(itemPrices[index]));
                    txtQuantity.requestFocus();
                } else {
                    txtItem.setText("Product not found");
                    txtPrice.setText("");
                }
            }
			}
		});
		txtBarcode.setBounds(24, 83, 96, 22);
		contentPane.add(txtBarcode);
		txtBarcode.setColumns(10);
		
		txtItem = new JTextField();
		txtItem.setEditable(false);
		txtItem.setBounds(24, 144, 96, 23);
		contentPane.add(txtItem);
		txtItem.setColumns(10);
		
		txtPrice = new JTextField();
		txtPrice.setEditable(false);
		txtPrice.setBounds(145, 83, 96, 22);
		contentPane.add(txtPrice);
		txtPrice.setColumns(10);
		
		txtQuantity = new JTextField();
		txtQuantity.addKeyListener(new KeyAdapter() {
			@Override
			public void keyPressed(KeyEvent e) {
				 calculateSubtotal();
			}
		});
		txtQuantity.setBounds(145, 146, 96, 23);
		contentPane.add(txtQuantity);
		txtQuantity.setColumns(10);
		
		txtSubtotal = new JTextField();
		txtSubtotal.setEditable(false);
		txtSubtotal.setBounds(128, 183, 69, 28);
		contentPane.add(txtSubtotal);
		txtSubtotal.setColumns(10);
		
		JButton btnNewButton = new JButton("ADD");
		btnNewButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
			}
		});
		btnNewButton.setBounds(31, 229, 74, 36);
		contentPane.add(btnNewButton);
		
		JLabel lblNewLabel_6 = new JLabel("Grand Total");
		lblNewLabel_6.setFont(new Font("Sitka Text", Font.BOLD, 14));
		lblNewLabel_6.setBounds(24, 286, 107, 31);
		contentPane.add(lblNewLabel_6);
		
		textField = new JTextField();
		textField.setEditable(false);
		textField.setBounds(123, 286, 118, 27);
		contentPane.add(textField);
		textField.setColumns(10);
		
		JLabel lblNewLabel_7 = new JLabel("Amount given");
		lblNewLabel_7.setFont(new Font("Sylfaen", Font.PLAIN, 15));
		lblNewLabel_7.setBounds(24, 327, 100, 19);
		contentPane.add(lblNewLabel_7);
		
		textField_1 = new JTextField();
		textField_1.setEditable(false);
		textField_1.setBounds(123, 325, 118, 19);
		contentPane.add(textField_1);
		textField_1.setColumns(10);
		
		JLabel lblNewLabel_8 = new JLabel("Change");
		lblNewLabel_8.setFont(new Font("Sylfaen", Font.PLAIN, 15));
		lblNewLabel_8.setBounds(24, 361, 81, 19);
		contentPane.add(lblNewLabel_8);
		
		textField_2 = new JTextField();
		textField_2.setEditable(false);
		textField_2.setColumns(10);
		textField_2.setBounds(123, 354, 118, 19);
		contentPane.add(textField_2);
		
		JButton btnNewButton_1 = new JButton("MODE OF PAYMENT");
		btnNewButton_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
		btnNewButton_1.setFont(new Font("Tahoma", Font.BOLD | Font.ITALIC, 10));
		btnNewButton_1.setBounds(382, 361, 144, 33);
		contentPane.add(btnNewButton_1);
		
		JButton btnNewButton_1_1 = new JButton("PRINT RECEIPT");
		btnNewButton_1_1.setFont(new Font("Tahoma", Font.BOLD | Font.ITALIC, 10));
		btnNewButton_1_1.setBounds(709, 361, 133, 33);
		contentPane.add(btnNewButton_1_1);
		
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(251, 62, 428, 203);
		contentPane.add(scrollPane);
		
		table = new JTable();
		table.setModel(new DefaultTableModel(
			new Object[][] {
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
			},
			new String[] {
				"BARCODE", "ITEM", "PRICE", "QUANTITY", "SUBTOTAL"
			}
		));
		scrollPane.setViewportView(table);
		
		table_1 = new JTable();
		table_1.setBounds(689, 62, 169, 284);
		contentPane.add(table_1);
	}
	  private void calculateSubtotal() {
	        try {
	            double price = Double.parseDouble(txtPrice.getText());
	            int quantity = Integer.parseInt(txtQuantity.getText());
	            double total = price * quantity;
	            txtSubtotal.setText(String.valueOf(total));
	        } catch (NumberFormatException e) {
	            txtSubtotal.setText("Invalid input");
	        }
	    }

	    public static void main1(String[] args) {
	        EventQueue.invokeLater(new Runnable() {
	            public void run() {
	                try {
	                    francee frame = new francee();
	                    frame.setVisible(true);
	                } catch (Exception e) {
	                    e.printStackTrace();
	                }
	            }
	        });
	    }
}
